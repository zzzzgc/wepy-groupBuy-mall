<!--lang值  默认值:css   可选:css、less、scss、stylus、postcss-->
<style lang="scss">
  @import "../../style/scssBase";

</style>

<!--lang值  默认值:babel   可选:babel、TypeScript-->
<template>
  <view class="container">
    <!-- 用户头像和名称  -->
    <navigator url="/pages/merchant/identity/shopAuth" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
      <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
        <image class="weui-media-box__thumb" src="{{userInfo.avatarUrl}}"/>
      </view>
      <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
        <view class="weui-media-box__title">{{userInfo.nickName}}</view>
        <view class="weui-media-box__desc">这是个人简介,非常的长非常的长非常的长非常的长非常的长非常的长非常的长非常的长非常的长非常的长</view>
      </view>
    </navigator>

    <card title="收益情况" icon="清单">
      <view slot="content">
        <text class='text-info'>可提现:</text>
        <text class='text-info' style='color: red;'>￥{{earningsInfo.money}}</text>
        <text class='text-other'>(待结算￥{{earningsInfo.settlementMoney}})</text>
        <view>
          <button class="weui-btn" type="primary" size="mini" class='mini-button'>查看明细</button>
          <button class="weui-btn" type="default" size="mini" class='mini-button'>提现</button>
        </view>
        <view>
          <text class='text-other'>7日可提现,认证后只需1日</text>
          <navigator url="/pages/merchant/identity/infoAuth" style='display: inline-block'>
            <text class='text-button-mini'>去认证></text>
          </navigator>
        </view>
      </view>
    </card>

    <!-- 功能列表  -->
    <menubar :list.sync="list"></menubar>
  </view>
</template>

<!--lang值  默认值:wxml   可选:wxml、xml、pug(原jade)-->
<script>
  import wepy from 'wepy'
  import menubar from '../../components/menubar/menubar'

  export default class merchantConfig extends wepy.page {
    /**
     * 页面配置对象，对应于原生的page.json文件，类似于app.wpy中的config
     */
    config = {
      navigationBarTitleText: '团购设置'
    }

    /**
     * 页面组件列表对象，声明页面所引入的组件列表
     */
    components = {
      menubar: menubar
    }

    /**
     * wxml事件处理函数对象，存放响应wxml中所捕获到的事件的函数，如bindtap、bindchange
     */
    methods = {}

    /**
     * 其他函数对象写到与methods平级的地方
     */

    /**
     * 页面渲染数据对象，存放可用于页面模板绑定的渲染数据
     */
    data = {
      list: [
        {
          group: 'groupBuy',
          name: '团购',
          open: true,
          icon: '购物车',
          pages: [
            {
              name: '新建团购',
              url: 'newGroupBuy'
            },
            {
              name: '管理团购',
              url: 'settingGroupBuy'
            }
          ]
        },
        {
          group: 'member',
          name: '会员',
          icon: '会员',
          open: true
        },
        {
          group: 'order',
          name: '订单',
          icon: '账单',
          open: true,
          pages: [
            {
              name: '查看订单',
              url: 'lookOrder'
            },
            {
              name: '商品销售统计',
              url: 'lookOrderSoldGoods'
            }
          ]
        },
        {
          group: 'setting',
          name: '设置',
          icon: '设置',
          open: true,
          pages: [
            {
              name: '我的群',
              url: 'myGroups'
            },
            {
              name: '我的助理',
              url: 'myAssistant'
            }
          ]
        }
      ],
      userInfo: {
        avatarUrl: ''
      },
      earningsInfo: {
        money: 0.00,
        settlementMoney: 0.00
      }
    }

    /**
     * 生命周期函数--监听页面加载
     */
    onLoad(options) {
      console.log(Object.assign({}, { name: 1, xx: 0 }, { name: 2, xxx: 2 }))
      this.userInfo = this.$parent.globalData.userInfo
    }

    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady() {
      console.log('渲染完成')
    }

    /**
     * 生命周期函数--监听页面显示
     */
    onShow() {
      console.log('页面显示')
    }

    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide() {
      console.log('页面隐藏')
    }

    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload() {
      console.log('页面卸载')
    }

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    onPullDownRefresh() {
      console.log('下拉成功')
    }

    /**
     * 页面上拉触底事件的处理函数
     */
    onReachBottom() {
      console.log('上拉成功')
    }

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage() {
      console.log('分享')
    }
  }
</script>
